---
export const prerender = false;
import ModalWindow from "../../components/ModalWindow.astro";
import Layout from "../../layouts/Layout.astro";
const { groupId } = Astro.params;

import { actions } from "astro:actions";

import { getSession } from "auth-astro/server";
const session = await getSession(Astro.request);
if (!session) {
  return Astro.redirect("/login");
}
const { user } = session;

const { data: groupDetailsData, error: groupDetailsError } =
  await Astro.callAction(actions.getGroupDetails, {
    groupId,
  });

const { data: groupUsersData, error: groupUsersError } = await Astro.callAction(
  actions.getUsersGroup,
  {
    groupId,
  }
);

// Check if current user is a member and admin of this group
let isCurrentUserMember = false;
let isCurrentUserAdmin = false;

if (user?.id && groupId) {
  const { data: membershipData } = await Astro.callAction(actions.getUserGroupMembership, {
    groupId,
    userId: user.id,
  });
  
  isCurrentUserMember = membershipData?.isMember || false;
  isCurrentUserAdmin = membershipData?.isAdmin || false;
}
---

<Layout>
  <div class="container mx-auto px-4 py-8">
    <!-- Header Section -->
    <div class="mb-8">
      <div class="flex items-center space-x-3 mb-4">
        <a
          href="/groups"
          class="text-purple-600 hover:text-purple-800 flex items-center space-x-1 transition-colors"
        >
          <svg
            class="w-5 h-5"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M15 19l-7-7 7-7"></path>
          </svg>
          <span>Back to Groups</span>
        </a>
      </div>

      <div class="flex items-center justify-between">
        <div class="flex items-center space-x-4">
          <div
            class="flex-shrink-0 h-16 w-16 bg-gradient-to-br from-purple-400 to-pink-500 rounded-full flex items-center justify-center text-white font-bold text-2xl shadow-lg"
          >
            {groupDetailsData?.group?.name?.charAt(0)?.toUpperCase() || "üë•"}
          </div>
          <div>
            <h1
              class="text-4xl font-bold text-gray-800 bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent"
            >
              {groupDetailsData?.group?.name || "Group Details"}
            </h1>
            <p class="text-gray-600 mt-1">Magic: The Gathering Playgroup</p>
          </div>
        </div>

        {
          !isCurrentUserMember && (
            <button
              id="btn-join-group"
              class="px-6 py-3 rounded-lg font-medium transition-all duration-200 shadow-sm hover:shadow-md flex items-center space-x-2"
              style="background: linear-gradient(to right, #9333ea, #ec4899) !important; color: white !important; border: none !important;"
            >
              <svg
                class="w-5 h-5"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"
                />
              </svg>
              <span>Join Group</span>
            </button>
          )
        }
      </div>
    </div>

    <!-- Group Details Card -->
    <div
      class="bg-white rounded-lg shadow-lg border border-gray-200 overflow-hidden mb-8"
    >
      <!-- Card Header -->
      <div
        class="bg-gradient-to-r from-purple-600 to-pink-600 text-white px-6 py-4"
      >
        <h2 class="text-xl font-semibold flex items-center space-x-2">
          <span>üìã</span>
          <span>Group Information</span>
        </h2>
      </div>

      <!-- Card Content -->
      <div class="p-6 space-y-6">
        <!-- Group Name -->
        <div class="bg-gray-50 rounded-lg p-4">
          <label
            class="block text-sm font-semibold text-gray-700 mb-2 flex items-center space-x-2"
          >
            <span>üè∑Ô∏è</span>
            <span>Group Name</span>
          </label>
          <span class="text-gray-800 text-lg font-medium">
            {groupDetailsData?.group?.name || "Unknown Group"}
          </span>
        </div>

        <!-- Group ID -->
        <div class="bg-gray-50 rounded-lg p-4">
          <label
            class="block text-sm font-semibold text-gray-700 mb-2 flex items-center space-x-2"
          >
            <span>üî¢</span>
            <span>Group ID</span>
          </label>
          <span
            class="text-gray-600 bg-white px-3 py-1 rounded-full text-sm border font-mono"
          >
            {groupDetailsData?.group?.id || "Unknown"}
          </span>
        </div>

        <!-- Created Date -->
        <div class="bg-gray-50 rounded-lg p-4">
          <label
            class="block text-sm font-semibold text-gray-700 mb-2 flex items-center space-x-2"
          >
            <span>üìÖ</span>
            <span>Date Created</span>
          </label>
          <span
            class="text-gray-600 bg-white px-3 py-1 rounded-full text-sm border"
          >
            {
              groupDetailsData?.group?.createdAt
                ? new Date(groupDetailsData.group.createdAt).toLocaleDateString(
                    "en-GB"
                  )
                : "Unknown"
            }
          </span>
        </div>
      </div>
    </div>

    <!-- Group Members Card -->
    <div
      class="bg-white rounded-lg shadow-lg border border-gray-200 overflow-hidden mb-8"
    >
      <!-- Card Header -->
      <div
        class="bg-gradient-to-r from-purple-600 to-pink-600 text-white px-6 py-4"
      >
        <h2 class="text-xl font-semibold flex items-center space-x-2">
          <span>üë•</span>
          <span>Group Members</span>
          <span class="bg-purple-500 text-white px-2 py-1 rounded-full text-sm">
            {groupUsersData?.users?.length || 0}
          </span>
        </h2>
      </div>

      <!-- Members List -->
      <div class="p-6">
        {
          groupUsersData?.users && groupUsersData.users.length > 0 ? (
            <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-4">
              {groupUsersData.users.map((member) => (
                <div class="flex items-center space-x-3 bg-gray-50 rounded-lg p-4 hover:bg-gray-100 transition-colors">
                  <div class="flex-shrink-0 h-10 w-10 bg-gradient-to-br from-purple-400 to-pink-500 rounded-full flex items-center justify-center text-white font-bold text-sm">
                    {member.name?.charAt(0)?.toUpperCase() || "?"}
                  </div>
                  <div class="flex-1">
                    <div class="text-sm font-medium text-gray-900">
                      {member.name || "Unknown Player"}
                    </div>
                    <div class="text-sm text-gray-500">Group Member</div>
                  </div>
                  <a
                    href={`/users/${member.id}`}
                    class="text-purple-600 hover:text-purple-800 transition-colors"
                  >
                    <svg
                      class="w-5 h-5"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                      />
                    </svg>
                  </a>
                </div>
              ))}
            </div>
          ) : (
            <div class="text-center py-8">
              <div class="text-gray-400 text-4xl mb-4">üë•</div>
              <h3 class="text-lg font-medium text-gray-900 mb-2">
                No members found
              </h3>
              <p class="text-gray-600">
                This group doesn't have any members yet.
              </p>
            </div>
          )
        }
      </div>
    </div>

    <!-- Action Buttons -->
    <div
      class="bg-white rounded-lg shadow-lg border border-gray-200 overflow-hidden"
    >
      <div
        class="bg-gradient-to-r from-gray-600 to-gray-700 text-white px-6 py-4"
      >
        <h2 class="text-xl font-semibold flex items-center space-x-2">
          <span>‚öôÔ∏è</span>
          <span>Actions</span>
        </h2>
      </div>

      <div class="p-6">
        <div class="flex flex-wrap gap-4">
          <a href="/new-match">
            <button
              class="bg-green-500 hover:bg-green-600 text-white px-6 py-3 rounded-lg font-medium transition-colors duration-200 shadow-sm hover:shadow-md flex items-center space-x-2"
            >
              <svg
                class="w-4 h-4"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M13 10V3L4 14h7v7l9-11h-7z"></path>
              </svg>
              <span>New Match</span>
            </button>
          </a>

          {isCurrentUserMember && !isCurrentUserAdmin && (
            <button
              id="btn-leave-group"
              class="bg-orange-500 hover:bg-orange-600 text-white px-6 py-3 rounded-lg font-medium transition-colors duration-200 shadow-sm hover:shadow-md flex items-center space-x-2"
            >
              <svg
                class="w-4 h-4"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"
                ></path>
              </svg>
              <span>Leave Group</span>
            </button>
          )}

          {isCurrentUserAdmin && (
            <button
              id="btn-delete-group"
              class="bg-red-500 hover:bg-red-600 text-white px-6 py-3 rounded-lg font-medium transition-colors duration-200 shadow-sm hover:shadow-md flex items-center space-x-2"
            >
              <svg
                class="w-4 h-4"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"
                ></path>
              </svg>
              <span>Delete Group</span>
            </button>
          )}
        </div>
      </div>
    </div>

    <input id="group-id-input" type="hidden" value={groupId} />
  </div>

  <!-- Enhanced Modal -->
  <ModalWindow>
    <!-- Modal Header -->
    <div class="bg-gradient-to-r from-red-500 to-red-600 text-white px-6 py-4">
      <h3 class="text-xl font-semibold flex items-center space-x-2">
        <span>‚ö†Ô∏è</span>
        <span>Confirm Action</span>
      </h3>
    </div>

    <!-- Modal Content -->
    <div class="p-6 bg-white">
      <p class="text-gray-700 mb-6">
        Are you sure you want to leave this group? You'll need to be re-invited
        to join again.
      </p>

      <div class="flex space-x-4 justify-end">
        <button
          id="close-modal"
          class="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium transition-colors duration-200 flex items-center space-x-2"
        >
          <svg
            class="w-4 h-4"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
          <span>Cancel</span>
        </button>

        <button
          id="confirm-leave"
          class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg font-medium transition-colors duration-200 flex items-center space-x-2"
        >
          <svg
            class="w-4 h-4"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"
            ></path>
          </svg>
          <span>Leave Group</span>
        </button>
      </div>
    </div>
  </ModalWindow>

  <!-- Join Group Modal -->
  <div
    id="join-modal-window"
    class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center p-4 z-50 hidden"
  >
    <div
      class="bg-white rounded-lg shadow-xl max-w-md w-full max-h-96 overflow-hidden"
    >
      <!-- Modal Header -->
      <div
        class="bg-gradient-to-r from-purple-600 to-pink-600 text-white px-6 py-4"
      >
        <h3 class="text-xl font-semibold flex items-center space-x-2">
          <span>üîê</span>
          <span>Join Group</span>
        </h3>
      </div>

      <!-- Modal Content -->
      <div class="p-6 bg-white">
        <p class="text-gray-700 mb-4">
          Enter the group password to join <strong
            >{groupDetailsData?.group?.name || "this group"}</strong
          >.
        </p>

        <form id="join-group-form" class="space-y-4">
          <div>
            <label
              for="group-password"
              class="block text-sm font-medium text-gray-700 mb-2"
            >
              Group Password
            </label>
            <input
              type="password"
              id="group-password"
              name="password"
              placeholder="Enter group password"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-colors bg-gray-50 focus:bg-white"
            />
          </div>

          <input type="hidden" name="groupId" value={groupId} />
          <input type="hidden" name="userId" value={user?.id} />

          <div class="flex space-x-4 justify-end pt-4">
            <button
              type="button"
              id="close-join-modal"
              class="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium transition-colors duration-200 flex items-center space-x-2"
            >
              <svg
                class="w-4 h-4"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M6 18L18 6M6 6l12 12"></path>
              </svg>
              <span>Cancel</span>
            </button>

            <button
              type="submit"
              id="confirm-join"
              class="px-6 py-2 rounded-lg font-medium transition-all duration-200 flex items-center space-x-2"
              style="background: linear-gradient(to right, #9333ea, #ec4899) !important; color: white !important; border: none !important;"
            >
              <svg
                class="w-4 h-4"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"
                ></path>
              </svg>
              <span>Join Group</span>
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Join Success/Error Modal -->
  <div
    id="join-result-modal"
    class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center p-4 z-50 hidden"
  >
    <div class="bg-white rounded-lg shadow-xl max-w-md w-full overflow-hidden">
      <!-- Modal Header -->
      <div id="join-result-header" class="px-6 py-4">
        <h3
          id="join-result-title"
          class="text-xl font-semibold flex items-center space-x-2"
        >
        </h3>
      </div>

      <!-- Modal Content -->
      <div class="p-6 bg-white">
        <div id="join-result-content" class="text-sm text-gray-500"></div>

        <div class="flex justify-end">
          <button
            id="close-join-result-modal"
            class="bg-gray-500 hover:bg-gray-600 text-white px-6 py-2 rounded-lg font-medium transition-colors duration-200"
          >
            Close
          </button>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  import { actions } from "astro:actions";

  // Leave group functionality
  const leaveGroupButton = document.getElementById(
    "btn-leave-group"
  ) as HTMLButtonElement;

  const modalWindow = document.getElementById("modal-window") as HTMLDivElement;

  const closeModalButton = document.getElementById(
    "close-modal"
  ) as HTMLButtonElement;

  const confirmLeaveButton = document.getElementById(
    "confirm-leave"
  ) as HTMLButtonElement;

  const groupIdInput = document.getElementById(
    "group-id-input"
  ) as HTMLInputElement;
  const groupId = groupIdInput.value;

  if (leaveGroupButton) {
    leaveGroupButton.addEventListener("click", () => {
      modalWindow.classList.remove("hidden");
    });
  }

  closeModalButton.addEventListener("click", () => {
    modalWindow.classList.add("hidden");
  });

  confirmLeaveButton.addEventListener("click", async () => {
    try {
      // Get user ID from the hidden input in the join form
      const userIdInput = document.querySelector(
        'input[name="userId"]'
      ) as HTMLInputElement;
      const userId = userIdInput?.value || "";

      if (!userId) {
        alert("User ID not found. Please refresh the page and try again.");
        return;
      }

      // Call the leave group action
      const { data, error } = await actions.leaveGroup({
        groupId: groupId,
        userId: userId,
      });

      // Hide the leave confirmation modal
      modalWindow.classList.add("hidden");

      if (data?.success) {
        // Success - redirect to groups page
        window.location.href = "/groups";
      } else {
        // Show error - we can reuse the join result modal for errors
        const resultTitle = document.getElementById("join-result-title");
        const resultContent = document.getElementById("join-result-content");
        const resultHeader = document.getElementById("join-result-header");

        if (resultHeader) {
          resultHeader.className =
            "bg-gradient-to-r from-red-500 to-red-600 text-white px-6 py-4";
        }
        if (resultTitle) {
          resultTitle.innerHTML = `
            <span>‚ùå</span>
            <span>Failed to Leave Group</span>
          `;
        }
        if (resultContent) {
          const errors = data?.error || ["An unexpected error occurred"];
          resultContent.innerHTML = `
            <ul class="space-y-1">
              ${errors.map((err: string) => `<li>${err}</li>`).join("")}
            </ul>
          `;
        }

        const joinResultModal = document.getElementById(
          "join-result-modal"
        ) as HTMLDivElement;
        joinResultModal.classList.remove("hidden");
      }
    } catch (error) {
      console.error("Error leaving group:", error);
      // Hide the leave confirmation modal
      modalWindow.classList.add("hidden");

      // Show generic error
      alert(
        "An error occurred while trying to leave the group. Please try again."
      );
    }
  });

  // Delete group functionality
  const deleteGroupButton = document.getElementById(
    "btn-delete-group"
  ) as HTMLButtonElement;

  if (deleteGroupButton) {
    deleteGroupButton.addEventListener("click", async () => {
      if (confirm("‚ö†Ô∏è WARNING: This will permanently delete the group and ALL related data including matches, player stats, and memberships. This action cannot be undone.\n\nAre you absolutely sure you want to delete this group?")) {
        try {
          // Get user ID from the hidden input in the join form
          const userIdInput = document.querySelector(
            'input[name="userId"]'
          ) as HTMLInputElement;
          const userId = userIdInput?.value || "";

          if (!userId) {
            alert("User ID not found. Please refresh the page and try again.");
            return;
          }

          // Call the delete group action
          const { data, error } = await actions.deleteGroup({
            groupId: groupId,
            userId: userId,
          });

          if (data?.success) {
            // Success - redirect to groups page
            alert("Group deleted successfully!");
            window.location.href = "/groups";
          } else {
            // Show error
            const errors = data?.error || ["An unexpected error occurred"];
            alert("Failed to delete group:\n" + errors.join("\n"));
          }
        } catch (error) {
          console.error("Error deleting group:", error);
          alert("An error occurred while trying to delete the group. Please try again.");
        }
      }
    });
  }

  // Join group functionality
  const joinGroupButton = document.getElementById(
    "btn-join-group"
  ) as HTMLButtonElement;
  const joinModal = document.getElementById(
    "join-modal-window"
  ) as HTMLDivElement;
  const closeJoinModal = document.getElementById(
    "close-join-modal"
  ) as HTMLButtonElement;
  const joinForm = document.getElementById(
    "join-group-form"
  ) as HTMLFormElement;
  const joinResultModal = document.getElementById(
    "join-result-modal"
  ) as HTMLDivElement;
  const closeJoinResultModal = document.getElementById(
    "close-join-result-modal"
  ) as HTMLButtonElement;

  if (joinGroupButton) {
    joinGroupButton.addEventListener("click", () => {
      joinModal.classList.remove("hidden");
    });
  }

  if (closeJoinModal) {
    closeJoinModal.addEventListener("click", () => {
      joinModal.classList.add("hidden");
      // Clear the password field
      const passwordField = document.getElementById(
        "group-password"
      ) as HTMLInputElement;
      if (passwordField) passwordField.value = "";
    });
  }

  if (closeJoinResultModal) {
    closeJoinResultModal.addEventListener("click", () => {
      joinResultModal.classList.add("hidden");
    });
  }

  if (joinForm) {
    joinForm.addEventListener("submit", async (e) => {
      e.preventDefault();

      const formData = new FormData(joinForm);
      const { data, error } = await actions.joinGroup(formData);

      // Hide the join modal
      joinModal.classList.add("hidden");

      // Show result modal
      const resultTitle = document.getElementById("join-result-title");
      const resultContent = document.getElementById("join-result-content");
      const resultHeader = document.getElementById("join-result-header");

      if (data?.success) {
        // Success
        if (resultHeader) {
          resultHeader.className =
            "bg-gradient-to-r from-green-500 to-green-600 text-white px-6 py-4";
        }
        if (resultTitle) {
          resultTitle.innerHTML = `
            <span>‚úÖ</span>
            <span>Successfully Joined!</span>
          `;
        }
        if (resultContent) {
          resultContent.textContent =
            data.message || "You have successfully joined the group!";
        }

        // Refresh the page after a short delay
        setTimeout(() => {
          window.location.reload();
        }, 2000);
      } else {
        // Error
        if (resultHeader) {
          resultHeader.className =
            "bg-gradient-to-r from-red-500 to-red-600 text-white px-6 py-4";
        }
        if (resultTitle) {
          resultTitle.innerHTML = `
            <span>‚ùå</span>
            <span>Failed to Join Group</span>
          `;
        }
        if (resultContent) {
          const errors = data?.error || ["An unexpected error occurred"];
          resultContent.innerHTML = `
            <ul class="space-y-1">
              ${errors.map((err: string) => `<li>${err}</li>`).join("")}
            </ul>
          `;
        }
      }

      joinResultModal.classList.remove("hidden");

      // Clear the password field
      const passwordField = document.getElementById(
        "group-password"
      ) as HTMLInputElement;
      if (passwordField) passwordField.value = "";
    });
  }
</script>
