---
const prerender = false;
import Layout from "../layouts/Layout.astro";
import ModalWindow from "../components/ModalWindow.astro";
import { getSession } from "auth-astro/server";

const session = await getSession(Astro.request);

if (!session) {
  return Astro.redirect("/login");
}

const { user } = session;
---

<Layout>
  <div class="container mx-auto px-4 py-8">
    <!-- Header Section -->
    <div class="mb-8">
      <div class="flex items-center space-x-3 mb-4">
        <a href="/decks" class="text-blue-600 hover:text-blue-800 flex items-center space-x-1 transition-colors">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
          <span>Back to Decks</span>
        </a>
      </div>
      
      <div class="flex items-center space-x-4">
        <div class="flex-shrink-0 h-16 w-16 bg-gradient-to-br from-green-400 to-blue-500 rounded-full flex items-center justify-center text-white font-bold text-2xl shadow-lg">
          ‚ö°
        </div>
        <div>
          <h1 class="text-4xl font-bold text-gray-800 bg-gradient-to-r from-green-600 to-blue-600 bg-clip-text text-transparent">
            Create New Deck
          </h1>
          <p class="text-gray-600 mt-1">Build your Magic: The Gathering collection</p>
        </div>
      </div>
    </div>

    <!-- Main Form Card -->
    <div class="max-w-2xl mx-auto">
      <div class="bg-white rounded-lg shadow-lg border border-gray-200 overflow-hidden">
        <!-- Card Header -->
        <div class="bg-gradient-to-r from-green-600 to-blue-600 text-white px-6 py-4">
          <h2 class="text-xl font-semibold flex items-center space-x-2">
            <span>üÉè</span>
            <span>Deck Information</span>
          </h2>
          <p class="text-green-100 text-sm mt-1">Enter your deck details below</p>
        </div>

        <!-- Form Content -->
        <div class="p-6">
          <form class="space-y-6">
            <!-- Deck Name Field -->
            <div>
              <label for="name" class="block text-sm font-medium text-gray-700 mb-2 flex items-center space-x-1">
                <span>üìù</span>
                <span>Deck Name</span>
                <span class="text-red-500">*</span>
              </label>
              <input
                id="name"
                type="text"
                name="name"
                placeholder="Enter your deck name (e.g., 'Lightning Aggro', 'Control Master')"
                value=""
                required
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors bg-gray-50 focus:bg-white"
              />
              <p class="text-xs text-gray-500 mt-1">Choose a memorable name for your deck</p>
            </div>

            <!-- Moxfield Link Field -->
            <div>
              <label for="moxfieldLink" class="block text-sm font-medium text-gray-700 mb-2 flex items-center space-x-1">
                <span>üîó</span>
                <span>Moxfield Link</span>
              </label>
              <input
                id="moxfieldLink"
                type="url"
                name="moxfieldLink"
                placeholder="https://www.moxfield.com/decks/your-deck-id"
                value=""
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors bg-gray-50 focus:bg-white"
              />
              <p class="text-xs text-gray-500 mt-1">Optional: Link to your Moxfield deck for easy sharing</p>
            </div>

            <!-- Hidden User ID -->
            <input type="hidden" name="userId" value={user?.id} />

            <!-- Action Buttons -->
            <div class="flex items-center justify-between pt-4 border-t border-gray-200">
              <a href="/decks" class="text-gray-600 hover:text-gray-800 font-medium transition-colors">
                Cancel
              </a>
              
              <button
                type="submit"
                id="btn-submit"
                class="px-8 py-3 rounded-lg font-medium transition-all duration-200 shadow-sm hover:shadow-md flex items-center space-x-2"
                style="background: linear-gradient(to right, #3b82f6, #1d4ed8) !important; color: white !important; border: none !important;"
              >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
                <span>Create Deck</span>
              </button>
            </div>
          </form>
        </div>
      </div>

      <!-- Tips Card -->
      <div class="mt-6 bg-blue-50 border border-blue-200 rounded-lg p-6">
        <h3 class="text-lg font-semibold text-blue-800 mb-3 flex items-center space-x-2">
          <span>üí°</span>
          <span>Deck Creation Tips</span>
        </h3>
        <ul class="space-y-2 text-sm text-blue-700">
          <li class="flex items-start space-x-2">
            <span class="text-blue-500 mt-0.5">‚Ä¢</span>
            <span><strong>Deck Names:</strong> Use descriptive names that reflect your strategy or theme</span>
          </li>
          <li class="flex items-start space-x-2">
            <span class="text-blue-500 mt-0.5">‚Ä¢</span>
            <span><strong>Moxfield Integration:</strong> Link your deck for easy deck list sharing and updates</span>
          </li>
          <li class="flex items-start space-x-2">
            <span class="text-blue-500 mt-0.5">‚Ä¢</span>
            <span><strong>Organization:</strong> Create multiple decks to track different strategies and formats</span>
          </li>
          <li class="flex items-start space-x-2">
            <span class="text-blue-500 mt-0.5">‚Ä¢</span>
            <span><strong>Tracking:</strong> Use this to monitor your deck performance in matches</span>
          </li>
        </ul>
      </div>
    </div>
  </div>

  <ModalWindow title="Deck Creation">
    <div>
      <h3 id="modal-title" class="text-xl font-semibold text-red-600 mb-4">‚ö†Ô∏è Deck Creation Failed</h3>
      <div class="modal-window-content text-gray-700"></div>
    </div>
    <div class="pt-4">
      <button
        id="close-modal"
        type="button"
        class="bg-gray-500 hover:bg-gray-600 text-white rounded-lg px-6 py-2 font-medium transition-colors duration-200"
      >
        Close
      </button>
    </div>
  </ModalWindow>
</Layout>

<script>
  import { actions } from "astro:actions";

  const closeModalButton = document.getElementById(
    "close-modal"
  ) as HTMLButtonElement;

  closeModalButton.addEventListener("click", () => {
    const modalWindow = document.getElementById(
      "modal-window"
    ) as HTMLDivElement;

    modalWindow.classList.add("hidden");
  });

  const form = document.querySelector("form") as HTMLFormElement;

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    const formData = new FormData(form);
    const { data, error } = await actions.createDeck(formData);

    if (data) {
      if (data.success) {
        window.location.href = "/decks";
      } else {
        const modalWindow = document.getElementById(
          "modal-window"
        ) as HTMLDivElement;

        const modalWindowContentDiv = modalWindow.querySelector(
          ".modal-window-content"
        ) as HTMLDivElement;

        modalWindowContentDiv.innerHTML = `
        <div>
          <ul>
            ${data.error ? data.error.map((error) => `<li>${typeof error === "string" ? error : error.message}</li>`).join("") : ""}
          </ul>
        </div>
      `;

        modalWindow.classList.remove("hidden");
      }
    }

    if (error) {
      console.error("error block: ", error);
    }
  });
</script>
